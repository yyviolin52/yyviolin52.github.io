{"meta":{"title":"Jacky Yuan Blog","subtitle":"","description":"Tech Blog","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-06-17T22:56:50.000Z","updated":"2020-06-17T22:56:50.671Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-06-17T22:56:49.000Z","updated":"2020-06-17T22:57:55.041Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"projects","date":"2020-06-17T22:56:48.000Z","updated":"2020-06-17T22:57:55.040Z","comments":true,"path":"projects/index.html","permalink":"http://yoursite.com/projects/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-06-17T22:56:49.000Z","updated":"2020-06-17T22:57:55.041Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"SQL-exercises-in-LeetCode-easy-part","slug":"SQL-exercises-in-LeetCode-easy-part","date":"2020-06-18T02:38:36.000Z","updated":"2020-06-18T02:45:58.985Z","comments":true,"path":"2020/06/17/SQL-exercises-in-LeetCode-easy-part/","link":"","permalink":"http://yoursite.com/2020/06/17/SQL-exercises-in-LeetCode-easy-part/","excerpt":"","text":"LeetCode中的sql练习题-easy难度部分本文包含LeetCode中easy难度的sql练习题的解题思路和通过代码，关于题目描述可以查看leetcode原网站，或者leetcode中文网站关于带锁的部分练习，由于博主没有开会员，所以没有在LeetCode网站上测试过，参考了别的博客写的。另外题目编号1113,1141,1142,1148,1173这几道题还没写出来。Combine Two Tables组合两个表题目描述：https://leetcode.com/problems/combine-two-tables/思路：题中给出的条件是无论 person 是否有地址信息，都需要基于上述两表提供 Person 的以下信息。也就是说以Person表为主表，主表中有的人有Address表中的地址信息，有的人没有。因此使用LEFT JOINMySQL通过代码：123SELECT P.FirstName, P.LastName, A.City, A.StateFROM Person AS P LEFT JOIN Address AS AON P.PersonId = A.PersonId;","categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-17T18:54:40.950Z","updated":"2020-06-17T18:54:40.950Z","comments":true,"path":"2020/06/17/hello-world/","link":"","permalink":"http://yoursite.com/2020/06/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment","categories":[],"tags":[]},{"title":"Welcome to Jacky Blog","slug":"easy","date":"2020-01-29T18:00:00.000Z","updated":"2020-06-17T22:51:25.696Z","comments":true,"path":"2020/01/29/easy/","link":"","permalink":"http://yoursite.com/2020/01/29/easy/","excerpt":"","text":"“Yeah It’s on. ”1142 User Activity for the Past 30 Days II题目描述：1234567891011121314151617181920212223242526272829303132333435363738394041Table: Activity+---------------+---------+| Column Name | Type |+---------------+---------+| user_id | int || session_id | int || activity_date | date || activity_type | enum |+---------------+---------+There is no primary key for this table, it may have duplicate rows.The activity_type column is an ENUM of type (&#39;open_session&#39;, &#39;end_session&#39;, &#39;scroll_down&#39;, &#39;send_message&#39;).The table shows the user activities for a social media website.Note that each session belongs to exactly one user.Write an SQL query to find the average number of sessions per user for a period of 30 days ending 2019-07-27 inclusively, rounded to 2 decimal places. The sessions we want to count for a user are those with at least one activity in that time period.The query result format is in the following example:Activity table:+---------+------------+---------------+---------------+| user_id | session_id | activity_date | activity_type |+---------+------------+---------------+---------------+| 1 | 1 | 2019-07-20 | open_session || 1 | 1 | 2019-07-20 | scroll_down || 1 | 1 | 2019-07-20 | end_session || 2 | 4 | 2019-07-20 | open_session || 2 | 4 | 2019-07-21 | send_message || 2 | 4 | 2019-07-21 | end_session || 3 | 2 | 2019-07-21 | open_session || 3 | 2 | 2019-07-21 | send_message || 3 | 2 | 2019-07-21 | end_session || 3 | 5 | 2019-07-21 | open_session || 3 | 5 | 2019-07-21 | scroll_down || 3 | 5 | 2019-07-21 | end_session || 4 | 3 | 2019-06-25 | open_session || 4 | 3 | 2019-06-25 | end_session |+---------+------------+---------------+---------------+Result table:+---------------------------+| average_sessions_per_user |+---------------------------+| 1.33 |+---------------------------+User 1 and 2 each had 1 session in the past 30 days while user 3 had 2 sessions so the average is (1 + 1 + 2) &#x2F; 3 &#x3D; 1.33.Reformat Department Table题目描述：https://leetcode.com/problems/reformat-department-table/思路：题目要求出每个id在1-12个月的收入，那么先把id进行分组，然后使用CASE WHEN来判断某月是否有收入，如果有就显示收入，没有就显示null。也可以把CASE WHEN换成IF()语句。通过代码：12345678910111213141516select id,sum(case when month = 'jan' then revenue else null end) as Jan_Revenue,sum(case when month = 'feb' then revenue else null end) as Feb_Revenue,sum(case when month = 'mar' then revenue else null end) as Mar_Revenue,sum(case when month = 'apr' then revenue else null end) as Apr_Revenue,sum(case when month = 'may' then revenue else null end) as May_Revenue,sum(case when month = 'jun' then revenue else null end) as Jun_Revenue,sum(case when month = 'jul' then revenue else null end) as Jul_Revenue,sum(case when month = 'aug' then revenue else null end) as Aug_Revenue,sum(case when month = 'sep' then revenue else null end) as Sep_Revenue,sum(case when month = 'oct' then revenue else null end) as Oct_Revenue,sum(case when month = 'nov' then revenue else null end) as Nov_Revenue,sum(case when month = 'dec' then revenue else null end) as Dec_Revenuefrom departmentgroup by idorder by id;","categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}],"author":"Jacky"}],"categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]}